<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhifa.gdou.mapper.TeacherMapper" >
  <resultMap id="BaseResultMap" type="com.zhifa.gdou.model.Teacher" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="teacher_num" property="teacherNum" jdbcType="VARCHAR" />
    <result column="teacher_name" property="teacherName" jdbcType="VARCHAR" />
    <result column="teacher_password" property="teacherPassword" jdbcType="VARCHAR" />
    <result column="openId" property="openid" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, teacher_num, teacher_name, teacher_password, openId, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from teacher
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from teacher
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhifa.gdou.model.Teacher" >
    insert into teacher (id, teacher_num, teacher_name, 
      teacher_password, openId, state
      )
    values (#{id,jdbcType=INTEGER}, #{teacherNum,jdbcType=VARCHAR}, #{teacherName,jdbcType=VARCHAR}, 
      #{teacherPassword,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhifa.gdou.model.Teacher" >
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="teacherNum != null" >
        teacher_num,
      </if>
      <if test="teacherName != null" >
        teacher_name,
      </if>
      <if test="teacherPassword != null" >
        teacher_password,
      </if>
      <if test="openid != null" >
        openId,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="teacherNum != null" >
        #{teacherNum,jdbcType=VARCHAR},
      </if>
      <if test="teacherName != null" >
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="teacherPassword != null" >
        #{teacherPassword,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhifa.gdou.model.Teacher" >
    update teacher
    <set >
      <if test="teacherNum != null" >
        teacher_num = #{teacherNum,jdbcType=VARCHAR},
      </if>
      <if test="teacherName != null" >
        teacher_name = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="teacherPassword != null" >
        teacher_password = #{teacherPassword,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        openId = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhifa.gdou.model.Teacher" >
    update teacher
    set teacher_num = #{teacherNum,jdbcType=VARCHAR},
      teacher_name = #{teacherName,jdbcType=VARCHAR},
      teacher_password = #{teacherPassword,jdbcType=VARCHAR},
      openId = #{openid,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="UpdateTeacherState">
     update teacher
     set state=0
     where id=#{id}
  </update>
    <update id="updateOpenIdByOpenId">
     update teacher
     set  openId =''
     where openId = #{openId,jdbcType=VARCHAR}
    </update>
    <!--自定义sql实现-->
  <select id="findAll" resultType="com.zhifa.gdou.model.Teacher">
    select * from teacher
    <where>
      <if test="teacherName !=null and teacherName != ''">
        and teacher_name like #{teacherName}
      </if>
      and  state=1
    </where>

  </select>
  <select id="selectByNameAndPass" resultType="com.zhifa.gdou.model.Teacher">
     select * from teacher
     where teacher_num=#{teacherNum} and teacher_password=#{teacherPassword}
  </select>
  <select id="selectByOpenId" resultType="com.zhifa.gdou.model.Teacher">
    SELECT * FROM teacher  WHERE openId=#{openId}
  </select>
    <select id="selectTeacherNameByNo" resultType="java.lang.String">
      SELECT DISTINCT teacher_name FROM teacher WHERE teacher_num=#{tNo}
    </select>
</mapper>